USE SAKILA;

SELECT table_name
FROM information_schema.tables
WHERE table_schema = 'sakila';
  
-- ES.1 -- Identificate tutti i clienti che non hanno effettuato nessun noleggio a gennaio 2006.

SELECT DISTINCT CONCAT(C.FIRST_NAME, ' ', C.LAST_NAME) AS 'CLIENTI CHE NON HANNO NOLEGGIATO A GEN/06' 
FROM CUSTOMER C 
LEFT JOIN RENTAL R ON C.CUSTOMER_ID = R.CUSTOMER_ID
WHERE R.RENTAL_DATE IS NULL OR (R.RENTAL_DATE < '2006-01-01' OR R.RENTAL_DATE > '2006-01-31');

-- SECONDA IDEA

SELECT CONCAT(C.FIRST_NAME, ' ', C.LAST_NAME) AS 'CLIENTI CHE NON HANNO NOLEGGIATO A GEN/06' 
FROM CUSTOMER C 
WHERE C.CUSTOMER_ID NOT IN (
    SELECT DISTINCT R.CUSTOMER_ID 
    FROM RENTAL R 
    WHERE MONTH(R.RENTAL_DATE) = 1 AND YEAR(R.RENTAL_DATE) = 2006);

-- ES.2 -- Elencate tutti i film che sono stati noleggiati più di 10 volte nell’ultimo quarto del 2005

SELECT R.*
FROM RENTAL R
WHERE R.RENTAL_DATE > '2005-10-01';

SELECT F.TITLE AS TITOLO, COUNT(*) AS NUMERO_NOLEGGI
FROM RENTAL R
JOIN INVENTORY I ON R.INVENTORY_ID = I.INVENTORY_ID
JOIN FILM F ON I.FILM_ID = F.FILM_ID
WHERE R.RENTAL_DATE BETWEEN '2005-10-01' AND '2005-12-31'
GROUP BY F.TITLE
HAVING COUNT(*) > 10;

-- SECONDA IDEA

SELECT F.TITLE AS TITOLO, COUNT(*) AS NUMERO_NOLEGGI
FROM RENTAL R
JOIN INVENTORY I ON R.INVENTORY_ID = I.INVENTORY_ID
JOIN FILM F ON I.FILM_ID = F.FILM_ID
WHERE MONTH(R.RENTAL_DATE) IN (10, 11, 12)
AND YEAR(R.RENTAL_DATE) = 2005
GROUP BY F.TITLE
HAVING COUNT(*) > 10;

-- ES.3 -- Trovate il numero totale di noleggi effettuati il giorno 1/1/2006.
SELECT * FROM RENTAL R WHERE R.RENTAL_DATE > '2005-12-31';

SELECT COUNT(*) 
FROM RENTAL R
WHERE R.RENTAL_DATE = '2006-01-01';

-- ES.4 -- Calcolate la somma degli incassi generati nei weekend (sabato e domenica).

SELECT * FROM PAYMENT;

SELECT ROUND(SUM(P.AMOUNT),1) AS 'PAGAMENTI NEL WEEKEND'
FROM PAYMENT P
WHERE DAYOFWEEK(P.PAYMENT_DATE) IN (1, 7);

-- ES.5 -- Individuate il cliente che ha speso di più in noleggi.

SELECT SUM(P.AMOUNT) AS €, CONCAT(C.FIRST_NAME, ' ', C.LAST_NAME) AS 'MIGLIOR CLIENTE' 
FROM CUSTOMER C 
JOIN PAYMENT P ON C.CUSTOMER_ID = P.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME
ORDER BY SUM(P.AMOUNT) DESC
LIMIT 1;

-- ES. 6 -- Elencate i 5 film con la maggior durata media di noleggio
SELECT F.TITLE AS TITOLO, ROUND(AVG(TIMESTAMPDIFF(DAY, R.RENTAL_DATE, R.RETURN_DATE)),1) AS 'MEDIA GIORNI DI NOLEGGIO'
FROM FILM F
JOIN INVENTORY I ON I.FILM_ID = F.FILM_ID 
JOIN RENTAL R ON R.INVENTORY_ID = I.INVENTORY_ID
GROUP BY F.TITLE
ORDER BY 'MEDIA GIORNI DI NOLEGGIO' DESC
LIMIT 5;

-- SECONDA IDEA (MIGLIORE)

SELECT F.TITLE AS TITOLO, AVG(DATEDIFF(R.RETURN_DATE, R.RENTAL_DATE)) AS 'MEDIA GIORNI DI NOLEGGIO'
FROM FILM F
JOIN INVENTORY I ON I.FILM_ID = F.FILM_ID 
JOIN RENTAL R ON R.INVENTORY_ID = I.INVENTORY_ID
GROUP BY F.TITLE
ORDER BY AVG(DATEDIFF(R.RETURN_DATE, R.RENTAL_DATE)) DESC
LIMIT 5;

-- ES.7 -- Calcolate il tempo medio tra due noleggi consecutivi da parte di un cliente.

SELECT 
    CONCAT(C.FIRST_NAME, ' ', C.LAST_NAME) AS CLIENTE, 
    AVG(DATEDIFF(R.RETURN_DATE, R2.RENTAL_DATE)) AS 'TEMPO MEDIO TRA NOLEGGI'
FROM 
    CUSTOMER C
LEFT JOIN 
    RENTAL R ON C.CUSTOMER_ID = R.CUSTOMER_ID
LEFT JOIN 
    RENTAL R2 ON C.CUSTOMER_ID = R2.CUSTOMER_ID
            AND R.RENTAL_ID = (SELECT MAX(RENTAL_ID) FROM RENTAL WHERE CUSTOMER_ID = C.CUSTOMER_ID AND RENTAL_ID < R2.RENTAL_ID)
WHERE 
    R2.RENTAL_DATE IS NOT NULL
    AND R.RETURN_DATE > R2.RENTAL_DATE 
GROUP BY 
    C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME
ORDER BY 'TEMPO MEDIO TRA NOLEGGI' DESC;
    
-- ES.8 -- Individuate il numero di noleggi per ogni mese del 2005.

SELECT COUNT(*), CONCAT(MONTH(R.RENTAL_DATE),"/", YEAR(R.RENTAL_DATE)) AS MESE_NOLEGGIO
FROM RENTAL R 
WHERE MONTH(R.RENTAL_DATE) IN (1,2,3,4,5,6,7,8,9,10,11,12) AND YEAR(R.RENTAL_DATE) = 2005
GROUP BY MESE_NOLEGGIO;

-- ES.9 -- Trovate i film che sono stati noleggiati almeno due volte lo stesso giorno.

SELECT  F.TITLE AS TITOLO, COUNT(*) AS 'NUMERO NOLEGGI', DATE_FORMAT(R.RENTAL_DATE, '%Y/%m/%d') AS 'DATA NOLEGGIO'
FROM RENTAL R
JOIN INVENTORY I ON R.INVENTORY_ID = I.INVENTORY_ID
JOIN FILM F ON I.FILM_ID = F.FILM_ID
GROUP BY F.FILM_ID, R.RENTAL_DATE
HAVING COUNT(*) >= 2;

-- E2.10 -- Calcolate il tempo medio di noleggio.

SELECT ROUND(AVG(TIMESTAMPDIFF(HOUR, R.RENTAL_DATE, R.RETURN_DATE)),0) AS 'TEMPO MEDIO DI NOLEGGIO'
FROM RENTAL R

